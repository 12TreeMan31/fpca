/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Node {
    pub parent: *mut Node,
    pub rank: ::std::os::raw::c_int,
    pub label: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Node"][::std::mem::size_of::<Node>() - 16usize];
    ["Alignment of Node"][::std::mem::align_of::<Node>() - 8usize];
    ["Offset of field: Node::parent"][::std::mem::offset_of!(Node, parent) - 0usize];
    ["Offset of field: Node::rank"][::std::mem::offset_of!(Node, rank) - 8usize];
    ["Offset of field: Node::label"][::std::mem::offset_of!(Node, label) - 12usize];
};
unsafe extern "C" {
    pub fn node_new(label: ::std::os::raw::c_int) -> *mut Node;
}
unsafe extern "C" {
    pub fn node_root(a: *mut Node) -> *mut Node;
}
unsafe extern "C" {
    pub fn node_union(a: *mut Node, b: *mut Node) -> *mut Node;
}
